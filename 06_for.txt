For
- 반복의 횟수가 정확할 때 주로 사용한다.
- for로 표현할 수 있는 것은 while로 표현 할 수 있다.

기본형태
-------------------------------------------
for(start; stop; step){
수행문;
}
-------------------------------------------


 exam1
--------------------------------------------
for(int i =0; i ≤ 10; i++){
    System.out,println(”hi”+1);
}
----------------------------------------------
출력값 :
hi0
hi1
hi2
hi3
hi4
hi5
hi6
hi7
hi8
hi9
hi10


for문에서의 continue

for문에서도 while 문에서와 마찬가지로 반복 수행 중 continue를 만나면 
더 이상 그 아래의 구문은 수행하지 않고 바로 다시 반복문으로 올라간다.


2중 for문

for문을 2번 반복하여 사용하면 다양한 형태를 구성할 수 있다.


- exam1
------------------------------------------------------------
for (int i = 0; i<=2; i++) {

    for(int j = 0; j<=2; j++) {
        System.out.println((i+1)+"일차" + (j+1)+"교시");
    }
}
--------------------------------------------------------------
출력값 :

1일차1교시
1일차2교시
1일차3교시
2일차1교시
2일차2교시
2일차3교시
3일차1교시
3일차2교시
3일차3교시


- exam 2 구구단 만들기
--------------------------------------------------------
for(int i = 2; i <=9; i++) {

    for(int j = 1; j <=9; j++) {
        System.out.print(i + "*"+ j +"="+ (i*j)+""\t);
    }
    System.out.println();
}

--------------------------------------------------------


- exam3 구구단 옆으로
--------------------------------------------------------
for(int i = 1; i <=9; i++) {

    for(int j = 2; j <=9; j++) {

        System.out.print(j + "*"+ i +"="+ (i*j)+"\t");

    }
    System.out.println();

}
----------------------------------------------------------


**For - each**

- for 반복문을 좀 더 쉽고 가독성이 좋게 사용할 수 있다.


quiz1
---------------------------------------------------------
for(int i =0; i<5; i++) {

    for(int j = 0; j<i+1; j++) {

        System.out.print("*");

    }
    System.out.println();

}
---------------------------------------------------------
출력값 : 
*
**
***
****
*****


quiz2 - 0부터 n까지 양의 정숫값을 카운트업
-----------------------------------------------------------------
System.out.println("카운트업 합니다.");
System.out.print("양의 정숫값: ");
Scanner sc = new Scanner(System.in);
int j=sc.nextInt();
for(int i=0; i <= j ; i++) {

System.out.println(i);

}
--------------------------------------------------------------------
출력값 : 

양의 정숫값: 8
0
1
2
3
4
5
6
7
8



quiz3 - 1 부터 n까지의 합을 구하는 프로그램을 for문을 사용해 작성하자.
-----------------------------------------------------------------------------------------
Scanner sc = new Scanner(System.in);
System.out.print("1부터 n까지의 합을 구합니다. n값 : ");
int j = sc.nextInt();
int sum =0 ;
for (int i=0; i<=j; i++) {

    sum = sum + i;
    }
    System.out.println("1부터 n까지의 합은 " + sum +"입니다");
-------------------------------------------------------------------------------------------


출력값:
1부터 n까지의 합을 구합니다. n값 : 15
1부터 n까지의 합은 120입니다.

system.out.print가 먼저 나와서 입력을 받고 int j 에 선언
int j = sc.nextint();
System.out.print(”1부터 n까지의 합을 구합니다. n값 : "); 로 실행 했을땐 콘솔에 아무것도 나타나지 않지만 정수를 입력 시 값은 구해짐




quiz4 - 기호문자 '*'를 나열해서 n단의 정방형을 표시하는 프로그램을 작성하자
--------------------------------------------------------------------------------
System.out.println("정방향을 표시합니다.");
Scanner sc = new Scanner([System.in](http://system.in/));
System.out.print("단수는 : ");
int k = sc.nextInt();
for (int i=0; i<k; i++) {
    for (int j = 0; j <k; j++) {
        System.out.print("*");
    }
    System.out.println();
}
-----------------------------------------------------------------------------------
출력값 : 
정방향을 표시합니다.
단수는 : 3
***
***
***


quiz5 - 왼쪽 아래가 직각인 이등변 삼각형을 표시합니다.
-----------------------------------------------------------------------------
Scanner sc = new Scanner(System.in);
System.out.println("왼쪽 아래가 직각인 이등변 삼각형을 표시합니다.");
System.out.print("단수는 :");

	int m1= sc.nextInt();
	for (int i = 0; i < m1; i++) {
		for(int j = 0; j <i+1; j++) {
			System.out.print("*");
		}System.out.println();

}
------------------------------------------------------------------------------
출력값 : 
왼쪽 아래가 지각인 이등변 삼각형을 표시합니다.
단수는 : 6
*
**
***
****
*****
******


quiz6 - 피라미드 만들기
-----------------------------------------------------------------------
System.out.println("피라미드를 표시합니다.");
System.out.print("단수는 : ");

	Scanner sc = new Scanner(System.in);
	int k = sc.nextInt();

	for(int i = 1; i <= k; i++) {

		for(int j = 1 ; j<= k-i; j++) {
			System.out.print("-");

		}
		for (int m = 1 ; m <= 2*i-1 ; m++) {
		System.out.print("*");
		}
		System.out.println();

}
-------------------------------------------------------------
피라미드를 표시합니다.
단수는 : 8
-------*
------***
-----*****
----*******
---*********
--***********
-*************
***************
공백 대신 - 를 사용해서 확인


※ 힌트 : k-i 는 별의 갯수는 홀수로 증가, 따라서 홀수 공식 2*i-1을 사용한다.

|  줄 | 여백 | 별 |

|  1  |  4  |  1  |
|  2  |  3  |  3  |
|  3  |  2  |  5  |
|  4  |  1  |  7  |
|  5  |  0  |  9  |